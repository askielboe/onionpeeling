# FUNCTION DEFINITIONS
proc func_temp {R} {
	set temp [expr -16.5*$R+10.]
	return $temp
}
proc func_rho {R i} {
	if {$i < 4} {
		set rho 0.008
	} else {
		set rho [expr pow($R*100,-2.)+0.003]
	}
	return $rho
}

# Script for generating xspec code
# Takes as input the output from sphvol.tcl and the chosen cylinder-shell we would like to observe.

set filenameradii "shells.dat"
set filenamein "volumes.out"
set filenameout "fakemekal.xspec"

# Read radii and define parameters
set e 2.71828183

set fradii [open $filenameradii r]
set i 1
while {![eof $fradii]} {
	gets $fradii line ; # Read line until we encounter a space (" ") and put into n
	for {set count 0} {[string index $line $count]!=" "} {incr count} {
		append R($i) [string index $line $count]
	}
	# Define temperature as a function of radius T(R)
	set t($i) [func_temp $R($i)]
	
	# Define density as a function of radius rho(R)
	set rho($i) [func_rho $R($i) $i]
	
	incr i
}
close $fradii

# READ-IN VOLUMES FROM filenamein
set fin [open $filenamein r]
gets $fin line ; # Don't read initial line
while {![eof $fin]} {
	gets $fin line ; # Read line until we encounter a space (" ") and put into shell
	set count 0
	while {[string index $line $count]>=-1} {
		set nshell [string index $line $count]
		incr count
	}
	incr count ; # Skip the space.
	while {[string index $line $count]>=-1} { ; # And read rest of line into observation.
		set nobs [string index $line $count]
		incr count
	}
	incr count ; # Skip the space.
	while {[string index $line $count]>=-1} { ; # Skip the coloumn with radii.
		incr count
	}
	incr count ; # Skip the space.
	while {[string index $line $count]!=""} { ; # And read rest of line into volume.
		append volume($nshell,$nobs) [string index $line $count]
		incr count
	}
}

close $fin

# Define procedure to write addcomp to models as a function of volume, shell and temperature
# Syntax: addcomp [Model Name:]<new component number> componentName
for {set iobs 1} {$iobs <= $nobs} {incr iobs} {
	set fout [open xspecgen_script$iobs.xcm w]
	# Initiate the model
	puts $fout "model 1:fakemek mekal & $t(1) & $rho(1) & 0.3 & 0.18 & & $volume($iobs,$iobs) &"
	if {[expr $nobs - $iobs] > 0} {
		set modelno 2
		for {set i [expr $iobs+1]} {$i <= $nobs} {incr i} {
			puts $fout "addcomp fakemek:$modelno mekal & $t($i) & $rho($i) & 0.3 & 0.18 & & $volume($i,$iobs) &"
			incr modelno
		}
	}
	puts $fout "data 1666_3.pi"
	puts $fout "fakeit & y & & fm_shell$iobs.fak & &"
	puts $fout "exit"
	close $fout
}

# GENERATE SHELL SCRIPT FOR RUNNING XSPEC
set fout [open xspecgen_script.sh w]
puts $fout "#!/bin/bash"
set time [clock format [clock seconds] -format {%Y-%m-%d %H:%M:%S}]
puts $fout "# Shell script auto-generated by xspecgen.tcl on $time."
puts $fout "# Please see the README for more information."
for {set i 1} {$i <= $nobs} {incr i} {
	puts $fout "xspec - xspecgen_script$i.xcm"
}
puts $fout "\n"
exec chmod 755 xspecgen_script.sh
close $fout
